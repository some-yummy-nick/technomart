/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$features-1-name: 'features-1';
$features-1-x: 0px;
$features-1-y: 124px;
$features-1-offset-x: 0px;
$features-1-offset-y: -124px;
$features-1-width: 44px;
$features-1-height: 65px;
$features-1-total-width: 215px;
$features-1-total-height: 189px;
$features-1-image: '../img/sprite.png';
$features-1: (0px, 124px, 0px, -124px, 44px, 65px, 215px, 189px, '../img/sprite.png', 'features-1', );
$features-2-name: 'features-2';
$features-2-x: 0px;
$features-2-y: 63px;
$features-2-offset-x: 0px;
$features-2-offset-y: -63px;
$features-2-width: 75px;
$features-2-height: 61px;
$features-2-total-width: 215px;
$features-2-total-height: 189px;
$features-2-image: '../img/sprite.png';
$features-2: (0px, 63px, 0px, -63px, 75px, 61px, 215px, 189px, '../img/sprite.png', 'features-2', );
$features-3-name: 'features-3';
$features-3-x: 78px;
$features-3-y: 0px;
$features-3-offset-x: -78px;
$features-3-offset-y: 0px;
$features-3-width: 78px;
$features-3-height: 62px;
$features-3-total-width: 215px;
$features-3-total-height: 189px;
$features-3-image: '../img/sprite.png';
$features-3: (78px, 0px, -78px, 0px, 78px, 62px, 215px, 189px, '../img/sprite.png', 'features-3', );
$features-4-name: 'features-4';
$features-4-x: 156px;
$features-4-y: 0px;
$features-4-offset-x: -156px;
$features-4-offset-y: 0px;
$features-4-width: 59px;
$features-4-height: 72px;
$features-4-total-width: 215px;
$features-4-total-height: 189px;
$features-4-image: '../img/sprite.png';
$features-4: (156px, 0px, -156px, 0px, 59px, 72px, 215px, 189px, '../img/sprite.png', 'features-4', );
$features-5-name: 'features-5';
$features-5-x: 0px;
$features-5-y: 0px;
$features-5-offset-x: 0px;
$features-5-offset-y: 0px;
$features-5-width: 78px;
$features-5-height: 63px;
$features-5-total-width: 215px;
$features-5-total-height: 189px;
$features-5-image: '../img/sprite.png';
$features-5: (0px, 0px, 0px, 0px, 78px, 63px, 215px, 189px, '../img/sprite.png', 'features-5', );
$features-flag-name: 'features-flag';
$features-flag-x: 75px;
$features-flag-y: 63px;
$features-flag-offset-x: -75px;
$features-flag-offset-y: -63px;
$features-flag-width: 60px;
$features-flag-height: 59px;
$features-flag-total-width: 215px;
$features-flag-total-height: 189px;
$features-flag-image: '../img/sprite.png';
$features-flag: (75px, 63px, -75px, -63px, 60px, 59px, 215px, 189px, '../img/sprite.png', 'features-flag', );
$spritesheet-width: 215px;
$spritesheet-height: 189px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($features-1, $features-2, $features-3, $features-4, $features-5, $features-flag, );
$spritesheet: (215px, 189px, '../img/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(../../img/#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
